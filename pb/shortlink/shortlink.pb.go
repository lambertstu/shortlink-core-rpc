// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.19.4
// source: shortlink.proto

package shortlink

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShortLinkCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"` // 原始链接
	Gid           string                 `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`                              // 分组标识
	Describe      string                 `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe,omitempty"`                    // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkCreateRequest) Reset() {
	*x = ShortLinkCreateRequest{}
	mi := &file_shortlink_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkCreateRequest) ProtoMessage() {}

func (x *ShortLinkCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkCreateRequest.ProtoReflect.Descriptor instead.
func (*ShortLinkCreateRequest) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{0}
}

func (x *ShortLinkCreateRequest) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *ShortLinkCreateRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ShortLinkCreateRequest) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

type ShortLinkCreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ShortUri      string                 `protobuf:"bytes,2,opt,name=short_uri,json=shortUri,proto3" json:"short_uri,omitempty"`
	OriginUrl     string                 `protobuf:"bytes,3,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"` // 原始链接
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkCreateResponse) Reset() {
	*x = ShortLinkCreateResponse{}
	mi := &file_shortlink_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkCreateResponse) ProtoMessage() {}

func (x *ShortLinkCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkCreateResponse.ProtoReflect.Descriptor instead.
func (*ShortLinkCreateResponse) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{1}
}

func (x *ShortLinkCreateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ShortLinkCreateResponse) GetShortUri() string {
	if x != nil {
		return x.ShortUri
	}
	return ""
}

func (x *ShortLinkCreateResponse) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

type ShortLinkUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkUpdateResponse) Reset() {
	*x = ShortLinkUpdateResponse{}
	mi := &file_shortlink_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkUpdateResponse) ProtoMessage() {}

func (x *ShortLinkUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkUpdateResponse.ProtoReflect.Descriptor instead.
func (*ShortLinkUpdateResponse) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{2}
}

func (x *ShortLinkUpdateResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type ShortLinkUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                              // 分组标识
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"` // 原始链接
	ShortUri      string                 `protobuf:"bytes,3,opt,name=short_uri,json=shortUri,proto3" json:"short_uri,omitempty"`    // 短链接
	Describe      string                 `protobuf:"bytes,4,opt,name=describe,proto3" json:"describe,omitempty"`                    // 描述
	Favicon       string                 `protobuf:"bytes,5,opt,name=favicon,proto3" json:"favicon,omitempty"`                      // 网站图标
	ClickNum      int64                  `protobuf:"varint,6,opt,name=clickNum,proto3" json:"clickNum,omitempty"`                   // 点击次数
	TotalPv       int64                  `protobuf:"varint,7,opt,name=totalPv,proto3" json:"totalPv,omitempty"`                     // 总PV（Page Views）
	TotalUv       int64                  `protobuf:"varint,8,opt,name=totalUv,proto3" json:"totalUv,omitempty"`                     // 总UV（Unique Visitors）
	TotalUip      int64                  `protobuf:"varint,9,opt,name=totalUip,proto3" json:"totalUip,omitempty"`                   // 总独立IP
	TodayPv       int64                  `protobuf:"varint,10,opt,name=todayPv,proto3" json:"todayPv,omitempty"`                    // 今日PV
	TodayUv       int64                  `protobuf:"varint,11,opt,name=todayUv,proto3" json:"todayUv,omitempty"`                    // 今日UV
	TodayUip      int64                  `protobuf:"varint,12,opt,name=todayUip,proto3" json:"todayUip,omitempty"`                  // 今日独立IP
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkUpdateRequest) Reset() {
	*x = ShortLinkUpdateRequest{}
	mi := &file_shortlink_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkUpdateRequest) ProtoMessage() {}

func (x *ShortLinkUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkUpdateRequest.ProtoReflect.Descriptor instead.
func (*ShortLinkUpdateRequest) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{3}
}

func (x *ShortLinkUpdateRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ShortLinkUpdateRequest) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *ShortLinkUpdateRequest) GetShortUri() string {
	if x != nil {
		return x.ShortUri
	}
	return ""
}

func (x *ShortLinkUpdateRequest) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ShortLinkUpdateRequest) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

func (x *ShortLinkUpdateRequest) GetClickNum() int64 {
	if x != nil {
		return x.ClickNum
	}
	return 0
}

func (x *ShortLinkUpdateRequest) GetTotalPv() int64 {
	if x != nil {
		return x.TotalPv
	}
	return 0
}

func (x *ShortLinkUpdateRequest) GetTotalUv() int64 {
	if x != nil {
		return x.TotalUv
	}
	return 0
}

func (x *ShortLinkUpdateRequest) GetTotalUip() int64 {
	if x != nil {
		return x.TotalUip
	}
	return 0
}

func (x *ShortLinkUpdateRequest) GetTodayPv() int64 {
	if x != nil {
		return x.TodayPv
	}
	return 0
}

func (x *ShortLinkUpdateRequest) GetTodayUv() int64 {
	if x != nil {
		return x.TodayUv
	}
	return 0
}

func (x *ShortLinkUpdateRequest) GetTodayUip() int64 {
	if x != nil {
		return x.TodayUip
	}
	return 0
}

type ShortLinkBatchCreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OriginUrls    []string               `protobuf:"bytes,1,rep,name=origin_urls,json=originUrls,proto3" json:"origin_urls,omitempty"` // 原始链接集合
	Describes     []string               `protobuf:"bytes,2,rep,name=describes,proto3" json:"describes,omitempty"`                     // 描述集合
	Gid           string                 `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`                                 // 分组标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkBatchCreateRequest) Reset() {
	*x = ShortLinkBatchCreateRequest{}
	mi := &file_shortlink_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkBatchCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkBatchCreateRequest) ProtoMessage() {}

func (x *ShortLinkBatchCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkBatchCreateRequest.ProtoReflect.Descriptor instead.
func (*ShortLinkBatchCreateRequest) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{4}
}

func (x *ShortLinkBatchCreateRequest) GetOriginUrls() []string {
	if x != nil {
		return x.OriginUrls
	}
	return nil
}

func (x *ShortLinkBatchCreateRequest) GetDescribes() []string {
	if x != nil {
		return x.Describes
	}
	return nil
}

func (x *ShortLinkBatchCreateRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

type ShortLinkPageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Size          int64                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	OrderTag      int64                  `protobuf:"varint,4,opt,name=orderTag,proto3" json:"orderTag,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkPageRequest) Reset() {
	*x = ShortLinkPageRequest{}
	mi := &file_shortlink_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkPageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkPageRequest) ProtoMessage() {}

func (x *ShortLinkPageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkPageRequest.ProtoReflect.Descriptor instead.
func (*ShortLinkPageRequest) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{5}
}

func (x *ShortLinkPageRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ShortLinkPageRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ShortLinkPageRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ShortLinkPageRequest) GetOrderTag() int64 {
	if x != nil {
		return x.OrderTag
	}
	return 0
}

type ShortLinkPageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	List          []*ShortLinkPageData   `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"` // 短链接分页数据列表
	Page          int64                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	MaxPage       int64                  `protobuf:"varint,3,opt,name=maxPage,proto3" json:"maxPage,omitempty"`
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"` // 总条数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkPageResponse) Reset() {
	*x = ShortLinkPageResponse{}
	mi := &file_shortlink_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkPageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkPageResponse) ProtoMessage() {}

func (x *ShortLinkPageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkPageResponse.ProtoReflect.Descriptor instead.
func (*ShortLinkPageResponse) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{6}
}

func (x *ShortLinkPageResponse) GetList() []*ShortLinkPageData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ShortLinkPageResponse) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ShortLinkPageResponse) GetMaxPage() int64 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *ShortLinkPageResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type ShortLinkPageData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortUri      string                 `protobuf:"bytes,3,opt,name=short_uri,json=shortUri,proto3" json:"short_uri,omitempty"`               // 短链接
	FullShortUrl  string                 `protobuf:"bytes,4,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	OriginUrl     string                 `protobuf:"bytes,5,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"`            // 原始链接
	Gid           string                 `protobuf:"bytes,6,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	EnableStatus  int32                  `protobuf:"varint,8,opt,name=enable_status,json=enableStatus,proto3" json:"enable_status,omitempty"`  // 启用标识 0：启用 1：未启用
	CreateTime    int64                  `protobuf:"varint,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`       // 创建时间（时间戳格式，单位：秒）
	Describe      string                 `protobuf:"bytes,11,opt,name=describe,proto3" json:"describe,omitempty"`                              // 描述
	Favicon       string                 `protobuf:"bytes,12,opt,name=favicon,proto3" json:"favicon,omitempty"`                                // 网站标识
	TotalPv       int32                  `protobuf:"varint,13,opt,name=total_pv,json=totalPv,proto3" json:"total_pv,omitempty"`                // 历史PV
	TodayPv       int32                  `protobuf:"varint,14,opt,name=today_pv,json=todayPv,proto3" json:"today_pv,omitempty"`                // 今日PV
	TotalUv       int32                  `protobuf:"varint,15,opt,name=total_uv,json=totalUv,proto3" json:"total_uv,omitempty"`                // 历史UV
	TodayUv       int32                  `protobuf:"varint,16,opt,name=today_uv,json=todayUv,proto3" json:"today_uv,omitempty"`                // 今日UV
	TotalUip      int32                  `protobuf:"varint,17,opt,name=total_uip,json=totalUip,proto3" json:"total_uip,omitempty"`             // 历史UIP
	TodayUip      int32                  `protobuf:"varint,18,opt,name=today_uip,json=todayUip,proto3" json:"today_uip,omitempty"`             // 今日UIP
	ClickNum      string                 `protobuf:"bytes,19,opt,name=ClickNum,proto3" json:"ClickNum,omitempty"`                              // 点击数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkPageData) Reset() {
	*x = ShortLinkPageData{}
	mi := &file_shortlink_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkPageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkPageData) ProtoMessage() {}

func (x *ShortLinkPageData) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkPageData.ProtoReflect.Descriptor instead.
func (*ShortLinkPageData) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{7}
}

func (x *ShortLinkPageData) GetShortUri() string {
	if x != nil {
		return x.ShortUri
	}
	return ""
}

func (x *ShortLinkPageData) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *ShortLinkPageData) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *ShortLinkPageData) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ShortLinkPageData) GetEnableStatus() int32 {
	if x != nil {
		return x.EnableStatus
	}
	return 0
}

func (x *ShortLinkPageData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *ShortLinkPageData) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ShortLinkPageData) GetFavicon() string {
	if x != nil {
		return x.Favicon
	}
	return ""
}

func (x *ShortLinkPageData) GetTotalPv() int32 {
	if x != nil {
		return x.TotalPv
	}
	return 0
}

func (x *ShortLinkPageData) GetTodayPv() int32 {
	if x != nil {
		return x.TodayPv
	}
	return 0
}

func (x *ShortLinkPageData) GetTotalUv() int32 {
	if x != nil {
		return x.TotalUv
	}
	return 0
}

func (x *ShortLinkPageData) GetTodayUv() int32 {
	if x != nil {
		return x.TodayUv
	}
	return 0
}

func (x *ShortLinkPageData) GetTotalUip() int32 {
	if x != nil {
		return x.TotalUip
	}
	return 0
}

func (x *ShortLinkPageData) GetTodayUip() int32 {
	if x != nil {
		return x.TodayUip
	}
	return 0
}

func (x *ShortLinkPageData) GetClickNum() string {
	if x != nil {
		return x.ClickNum
	}
	return ""
}

type ListGroupShortLinkCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListGroupShortLinkCountRequest) Reset() {
	*x = ListGroupShortLinkCountRequest{}
	mi := &file_shortlink_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupShortLinkCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupShortLinkCountRequest) ProtoMessage() {}

func (x *ListGroupShortLinkCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupShortLinkCountRequest.ProtoReflect.Descriptor instead.
func (*ListGroupShortLinkCountRequest) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{8}
}

func (x *ListGroupShortLinkCountRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

type ListGroupShortLinkCountResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Gid            string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`
	ShortlinkCount int32                  `protobuf:"varint,2,opt,name=shortlinkCount,proto3" json:"shortlinkCount,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListGroupShortLinkCountResponse) Reset() {
	*x = ListGroupShortLinkCountResponse{}
	mi := &file_shortlink_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListGroupShortLinkCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListGroupShortLinkCountResponse) ProtoMessage() {}

func (x *ListGroupShortLinkCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListGroupShortLinkCountResponse.ProtoReflect.Descriptor instead.
func (*ListGroupShortLinkCountResponse) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{9}
}

func (x *ListGroupShortLinkCountResponse) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ListGroupShortLinkCountResponse) GetShortlinkCount() int32 {
	if x != nil {
		return x.ShortlinkCount
	}
	return 0
}

type ShortLinkDeleteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortUri      string                 `protobuf:"bytes,1,opt,name=shortUri,proto3" json:"shortUri,omitempty"`
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkDeleteRequest) Reset() {
	*x = ShortLinkDeleteRequest{}
	mi := &file_shortlink_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkDeleteRequest) ProtoMessage() {}

func (x *ShortLinkDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkDeleteRequest.ProtoReflect.Descriptor instead.
func (*ShortLinkDeleteRequest) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{10}
}

func (x *ShortLinkDeleteRequest) GetShortUri() string {
	if x != nil {
		return x.ShortUri
	}
	return ""
}

func (x *ShortLinkDeleteRequest) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

type ShortLinkDeleteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkDeleteResponse) Reset() {
	*x = ShortLinkDeleteResponse{}
	mi := &file_shortlink_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkDeleteResponse) ProtoMessage() {}

func (x *ShortLinkDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_shortlink_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkDeleteResponse.ProtoReflect.Descriptor instead.
func (*ShortLinkDeleteResponse) Descriptor() ([]byte, []int) {
	return file_shortlink_proto_rawDescGZIP(), []int{11}
}

func (x *ShortLinkDeleteResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_shortlink_proto protoreflect.FileDescriptor

var file_shortlink_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x22, 0x65, 0x0a, 0x16,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x22, 0x6f, 0x0a, 0x17, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x55, 0x72, 0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x55, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x17, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0xd8, 0x02, 0x0a, 0x16, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x75,
	0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55,
	0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x76, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x76, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x76, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x55, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x55, 0x69, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x76, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x76, 0x12, 0x18,
	0x0a, 0x07, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x55, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x55, 0x76, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x55, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x64, 0x61,
	0x79, 0x55, 0x69, 0x70, 0x22, 0x6e, 0x0a, 0x1b, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x55, 0x72, 0x6c, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x67, 0x69, 0x64, 0x22, 0x6c, 0x0a, 0x14, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e,
	0x6b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x61, 0x67, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x22, 0xc5, 0x03, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x50, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x55, 0x72, 0x69, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66,
	0x75, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x61, 0x76, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x76, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x50, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x70, 0x76, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x50, 0x76, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x76, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x76, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x5f, 0x75, 0x76, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x6f, 0x64,
	0x61, 0x79, 0x55, 0x76, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x75, 0x69,
	0x70, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x55, 0x69,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x5f, 0x75, 0x69, 0x70, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x64, 0x61, 0x79, 0x55, 0x69, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x22, 0x32, 0x0a, 0x1e, 0x4c, 0x69,
	0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x67, 0x69, 0x64, 0x22, 0x5b,
	0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x67, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x53, 0x0a, 0x16, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x55, 0x72,
	0x69, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x55, 0x72, 0x6c,
	0x22, 0x33, 0x0a, 0x17, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xed, 0x02, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x6c,
	0x69, 0x6e, 0x6b, 0x12, 0x58, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69,
	0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a,
	0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x21, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x65, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1f, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x21,
	0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x6c, 0x69, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shortlink_proto_rawDescOnce sync.Once
	file_shortlink_proto_rawDescData = file_shortlink_proto_rawDesc
)

func file_shortlink_proto_rawDescGZIP() []byte {
	file_shortlink_proto_rawDescOnce.Do(func() {
		file_shortlink_proto_rawDescData = protoimpl.X.CompressGZIP(file_shortlink_proto_rawDescData)
	})
	return file_shortlink_proto_rawDescData
}

var file_shortlink_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_shortlink_proto_goTypes = []any{
	(*ShortLinkCreateRequest)(nil),          // 0: shortlink.ShortLinkCreateRequest
	(*ShortLinkCreateResponse)(nil),         // 1: shortlink.ShortLinkCreateResponse
	(*ShortLinkUpdateResponse)(nil),         // 2: shortlink.ShortLinkUpdateResponse
	(*ShortLinkUpdateRequest)(nil),          // 3: shortlink.ShortLinkUpdateRequest
	(*ShortLinkBatchCreateRequest)(nil),     // 4: shortlink.ShortLinkBatchCreateRequest
	(*ShortLinkPageRequest)(nil),            // 5: shortlink.ShortLinkPageRequest
	(*ShortLinkPageResponse)(nil),           // 6: shortlink.ShortLinkPageResponse
	(*ShortLinkPageData)(nil),               // 7: shortlink.ShortLinkPageData
	(*ListGroupShortLinkCountRequest)(nil),  // 8: shortlink.ListGroupShortLinkCountRequest
	(*ListGroupShortLinkCountResponse)(nil), // 9: shortlink.ListGroupShortLinkCountResponse
	(*ShortLinkDeleteRequest)(nil),          // 10: shortlink.ShortLinkDeleteRequest
	(*ShortLinkDeleteResponse)(nil),         // 11: shortlink.ShortLinkDeleteResponse
}
var file_shortlink_proto_depIdxs = []int32{
	7,  // 0: shortlink.ShortLinkPageResponse.list:type_name -> shortlink.ShortLinkPageData
	0,  // 1: shortlink.Shortlink.CreateShortLink:input_type -> shortlink.ShortLinkCreateRequest
	3,  // 2: shortlink.Shortlink.UpdateShortLink:input_type -> shortlink.ShortLinkUpdateRequest
	5,  // 3: shortlink.Shortlink.PageShortLink:input_type -> shortlink.ShortLinkPageRequest
	10, // 4: shortlink.Shortlink.DeleteShortLink:input_type -> shortlink.ShortLinkDeleteRequest
	1,  // 5: shortlink.Shortlink.CreateShortLink:output_type -> shortlink.ShortLinkCreateResponse
	2,  // 6: shortlink.Shortlink.UpdateShortLink:output_type -> shortlink.ShortLinkUpdateResponse
	6,  // 7: shortlink.Shortlink.PageShortLink:output_type -> shortlink.ShortLinkPageResponse
	11, // 8: shortlink.Shortlink.DeleteShortLink:output_type -> shortlink.ShortLinkDeleteResponse
	5,  // [5:9] is the sub-list for method output_type
	1,  // [1:5] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_shortlink_proto_init() }
func file_shortlink_proto_init() {
	if File_shortlink_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shortlink_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shortlink_proto_goTypes,
		DependencyIndexes: file_shortlink_proto_depIdxs,
		MessageInfos:      file_shortlink_proto_msgTypes,
	}.Build()
	File_shortlink_proto = out.File
	file_shortlink_proto_rawDesc = nil
	file_shortlink_proto_goTypes = nil
	file_shortlink_proto_depIdxs = nil
}
